"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetMaxOutgoingBitrateRequestT = exports.SetMaxOutgoingBitrateRequest = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const flatbuffers = require("flatbuffers");
class SetMaxOutgoingBitrateRequest {
    bb = null;
    bb_pos = 0;
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsSetMaxOutgoingBitrateRequest(bb, obj) {
        return (obj || new SetMaxOutgoingBitrateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsSetMaxOutgoingBitrateRequest(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new SetMaxOutgoingBitrateRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    maxOutgoingBitrate() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    }
    static startSetMaxOutgoingBitrateRequest(builder) {
        builder.startObject(1);
    }
    static addMaxOutgoingBitrate(builder, maxOutgoingBitrate) {
        builder.addFieldInt32(0, maxOutgoingBitrate, 0);
    }
    static endSetMaxOutgoingBitrateRequest(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createSetMaxOutgoingBitrateRequest(builder, maxOutgoingBitrate) {
        SetMaxOutgoingBitrateRequest.startSetMaxOutgoingBitrateRequest(builder);
        SetMaxOutgoingBitrateRequest.addMaxOutgoingBitrate(builder, maxOutgoingBitrate);
        return SetMaxOutgoingBitrateRequest.endSetMaxOutgoingBitrateRequest(builder);
    }
    unpack() {
        return new SetMaxOutgoingBitrateRequestT(this.maxOutgoingBitrate());
    }
    unpackTo(_o) {
        _o.maxOutgoingBitrate = this.maxOutgoingBitrate();
    }
}
exports.SetMaxOutgoingBitrateRequest = SetMaxOutgoingBitrateRequest;
class SetMaxOutgoingBitrateRequestT {
    maxOutgoingBitrate;
    constructor(maxOutgoingBitrate = 0) {
        this.maxOutgoingBitrate = maxOutgoingBitrate;
    }
    pack(builder) {
        return SetMaxOutgoingBitrateRequest.createSetMaxOutgoingBitrateRequest(builder, this.maxOutgoingBitrate);
    }
}
exports.SetMaxOutgoingBitrateRequestT = SetMaxOutgoingBitrateRequestT;
