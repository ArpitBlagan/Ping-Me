import * as flatbuffers from 'flatbuffers';
import { DumpResponseT as FBS_Consumer_DumpResponseT } from '../../fbs/consumer/dump-response';
import { GetStatsResponseT as FBS_Consumer_GetStatsResponseT } from '../../fbs/consumer/get-stats-response';
import { SetPreferredLayersResponseT } from '../../fbs/consumer/set-preferred-layers-response';
import { SetPriorityResponseT } from '../../fbs/consumer/set-priority-response';
import { AddSubchannelResponseT } from '../../fbs/data-consumer/add-subchannel-response';
import { DumpResponseT as FBS_DataConsumer_DumpResponseT } from '../../fbs/data-consumer/dump-response';
import { GetBufferedAmountResponseT } from '../../fbs/data-consumer/get-buffered-amount-response';
import { GetStatsResponseT as FBS_DataConsumer_GetStatsResponseT } from '../../fbs/data-consumer/get-stats-response';
import { RemoveSubchannelResponseT } from '../../fbs/data-consumer/remove-subchannel-response';
import { SetSubchannelsResponseT } from '../../fbs/data-consumer/set-subchannels-response';
import { DumpResponseT as FBS_DataProducer_DumpResponseT } from '../../fbs/data-producer/dump-response';
import { GetStatsResponseT as FBS_DataProducer_GetStatsResponseT } from '../../fbs/data-producer/get-stats-response';
import { DumpResponseT as FBS_DirectTransport_DumpResponseT } from '../../fbs/direct-transport/dump-response';
import { GetStatsResponseT as FBS_DirectTransport_GetStatsResponseT } from '../../fbs/direct-transport/get-stats-response';
import { ConnectResponseT as FBS_PipeTransport_ConnectResponseT } from '../../fbs/pipe-transport/connect-response';
import { DumpResponseT as FBS_PipeTransport_DumpResponseT } from '../../fbs/pipe-transport/dump-response';
import { GetStatsResponseT as FBS_PipeTransport_GetStatsResponseT } from '../../fbs/pipe-transport/get-stats-response';
import { ConnectResponseT } from '../../fbs/plain-transport/connect-response';
import { DumpResponseT as FBS_PlainTransport_DumpResponseT } from '../../fbs/plain-transport/dump-response';
import { GetStatsResponseT } from '../../fbs/plain-transport/get-stats-response';
import { DumpResponseT as FBS_Producer_DumpResponseT } from '../../fbs/producer/dump-response';
import { GetStatsResponseT as FBS_Producer_GetStatsResponseT } from '../../fbs/producer/get-stats-response';
import { Body } from '../../fbs/response/body';
import { DumpResponseT as FBS_Router_DumpResponseT } from '../../fbs/router/dump-response';
import { ConsumeResponseT } from '../../fbs/transport/consume-response';
import { ProduceResponseT } from '../../fbs/transport/produce-response';
import { RestartIceResponseT } from '../../fbs/transport/restart-ice-response';
import { DumpResponseT as FBS_WebRtcServer_DumpResponseT } from '../../fbs/web-rtc-server/dump-response';
import { ConnectResponseT as FBS_WebRtcTransport_ConnectResponseT } from '../../fbs/web-rtc-transport/connect-response';
import { DumpResponseT as FBS_WebRtcTransport_DumpResponseT } from '../../fbs/web-rtc-transport/dump-response';
import { GetStatsResponseT as FBS_WebRtcTransport_GetStatsResponseT } from '../../fbs/web-rtc-transport/get-stats-response';
import { DumpResponseT } from '../../fbs/worker/dump-response';
import { ResourceUsageResponseT } from '../../fbs/worker/resource-usage-response';
export declare class Response implements flatbuffers.IUnpackableObject<ResponseT> {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): Response;
    static getRootAsResponse(bb: flatbuffers.ByteBuffer, obj?: Response): Response;
    static getSizePrefixedRootAsResponse(bb: flatbuffers.ByteBuffer, obj?: Response): Response;
    id(): number;
    accepted(): boolean;
    bodyType(): Body;
    body<T extends flatbuffers.Table>(obj: any): any | null;
    error(): string | null;
    error(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    reason(): string | null;
    reason(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;
    static startResponse(builder: flatbuffers.Builder): void;
    static addId(builder: flatbuffers.Builder, id: number): void;
    static addAccepted(builder: flatbuffers.Builder, accepted: boolean): void;
    static addBodyType(builder: flatbuffers.Builder, bodyType: Body): void;
    static addBody(builder: flatbuffers.Builder, bodyOffset: flatbuffers.Offset): void;
    static addError(builder: flatbuffers.Builder, errorOffset: flatbuffers.Offset): void;
    static addReason(builder: flatbuffers.Builder, reasonOffset: flatbuffers.Offset): void;
    static endResponse(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createResponse(builder: flatbuffers.Builder, id: number, accepted: boolean, bodyType: Body, bodyOffset: flatbuffers.Offset, errorOffset: flatbuffers.Offset, reasonOffset: flatbuffers.Offset): flatbuffers.Offset;
    unpack(): ResponseT;
    unpackTo(_o: ResponseT): void;
}
export declare class ResponseT implements flatbuffers.IGeneratedObject {
    id: number;
    accepted: boolean;
    bodyType: Body;
    body: AddSubchannelResponseT | ConnectResponseT | ConsumeResponseT | DumpResponseT | FBS_Consumer_DumpResponseT | FBS_Consumer_GetStatsResponseT | FBS_DataConsumer_DumpResponseT | FBS_DataConsumer_GetStatsResponseT | FBS_DataProducer_DumpResponseT | FBS_DataProducer_GetStatsResponseT | FBS_DirectTransport_DumpResponseT | FBS_DirectTransport_GetStatsResponseT | FBS_PipeTransport_ConnectResponseT | FBS_PipeTransport_DumpResponseT | FBS_PipeTransport_GetStatsResponseT | FBS_PlainTransport_DumpResponseT | FBS_Producer_DumpResponseT | FBS_Producer_GetStatsResponseT | FBS_Router_DumpResponseT | FBS_WebRtcServer_DumpResponseT | FBS_WebRtcTransport_ConnectResponseT | FBS_WebRtcTransport_DumpResponseT | FBS_WebRtcTransport_GetStatsResponseT | GetBufferedAmountResponseT | GetStatsResponseT | ProduceResponseT | RemoveSubchannelResponseT | ResourceUsageResponseT | RestartIceResponseT | SetPreferredLayersResponseT | SetPriorityResponseT | SetSubchannelsResponseT | null;
    error: string | Uint8Array | null;
    reason: string | Uint8Array | null;
    constructor(id?: number, accepted?: boolean, bodyType?: Body, body?: AddSubchannelResponseT | ConnectResponseT | ConsumeResponseT | DumpResponseT | FBS_Consumer_DumpResponseT | FBS_Consumer_GetStatsResponseT | FBS_DataConsumer_DumpResponseT | FBS_DataConsumer_GetStatsResponseT | FBS_DataProducer_DumpResponseT | FBS_DataProducer_GetStatsResponseT | FBS_DirectTransport_DumpResponseT | FBS_DirectTransport_GetStatsResponseT | FBS_PipeTransport_ConnectResponseT | FBS_PipeTransport_DumpResponseT | FBS_PipeTransport_GetStatsResponseT | FBS_PlainTransport_DumpResponseT | FBS_Producer_DumpResponseT | FBS_Producer_GetStatsResponseT | FBS_Router_DumpResponseT | FBS_WebRtcServer_DumpResponseT | FBS_WebRtcTransport_ConnectResponseT | FBS_WebRtcTransport_DumpResponseT | FBS_WebRtcTransport_GetStatsResponseT | GetBufferedAmountResponseT | GetStatsResponseT | ProduceResponseT | RemoveSubchannelResponseT | ResourceUsageResponseT | RestartIceResponseT | SetPreferredLayersResponseT | SetPriorityResponseT | SetSubchannelsResponseT | null, error?: string | Uint8Array | null, reason?: string | Uint8Array | null);
    pack(builder: flatbuffers.Builder): flatbuffers.Offset;
}
//# sourceMappingURL=response.d.ts.map