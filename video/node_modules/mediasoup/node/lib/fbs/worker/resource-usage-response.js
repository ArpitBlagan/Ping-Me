"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceUsageResponseT = exports.ResourceUsageResponse = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const flatbuffers = require("flatbuffers");
class ResourceUsageResponse {
    bb = null;
    bb_pos = 0;
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsResourceUsageResponse(bb, obj) {
        return (obj || new ResourceUsageResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsResourceUsageResponse(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ResourceUsageResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    ruUtime() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruStime() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruMaxrss() {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruIxrss() {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruIdrss() {
        const offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruIsrss() {
        const offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruMinflt() {
        const offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruMajflt() {
        const offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruNswap() {
        const offset = this.bb.__offset(this.bb_pos, 20);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruInblock() {
        const offset = this.bb.__offset(this.bb_pos, 22);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruOublock() {
        const offset = this.bb.__offset(this.bb_pos, 24);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruMsgsnd() {
        const offset = this.bb.__offset(this.bb_pos, 26);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruMsgrcv() {
        const offset = this.bb.__offset(this.bb_pos, 28);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruNsignals() {
        const offset = this.bb.__offset(this.bb_pos, 30);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruNvcsw() {
        const offset = this.bb.__offset(this.bb_pos, 32);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    ruNivcsw() {
        const offset = this.bb.__offset(this.bb_pos, 34);
        return offset ? this.bb.readUint64(this.bb_pos + offset) : BigInt('0');
    }
    static startResourceUsageResponse(builder) {
        builder.startObject(16);
    }
    static addRuUtime(builder, ruUtime) {
        builder.addFieldInt64(0, ruUtime, BigInt('0'));
    }
    static addRuStime(builder, ruStime) {
        builder.addFieldInt64(1, ruStime, BigInt('0'));
    }
    static addRuMaxrss(builder, ruMaxrss) {
        builder.addFieldInt64(2, ruMaxrss, BigInt('0'));
    }
    static addRuIxrss(builder, ruIxrss) {
        builder.addFieldInt64(3, ruIxrss, BigInt('0'));
    }
    static addRuIdrss(builder, ruIdrss) {
        builder.addFieldInt64(4, ruIdrss, BigInt('0'));
    }
    static addRuIsrss(builder, ruIsrss) {
        builder.addFieldInt64(5, ruIsrss, BigInt('0'));
    }
    static addRuMinflt(builder, ruMinflt) {
        builder.addFieldInt64(6, ruMinflt, BigInt('0'));
    }
    static addRuMajflt(builder, ruMajflt) {
        builder.addFieldInt64(7, ruMajflt, BigInt('0'));
    }
    static addRuNswap(builder, ruNswap) {
        builder.addFieldInt64(8, ruNswap, BigInt('0'));
    }
    static addRuInblock(builder, ruInblock) {
        builder.addFieldInt64(9, ruInblock, BigInt('0'));
    }
    static addRuOublock(builder, ruOublock) {
        builder.addFieldInt64(10, ruOublock, BigInt('0'));
    }
    static addRuMsgsnd(builder, ruMsgsnd) {
        builder.addFieldInt64(11, ruMsgsnd, BigInt('0'));
    }
    static addRuMsgrcv(builder, ruMsgrcv) {
        builder.addFieldInt64(12, ruMsgrcv, BigInt('0'));
    }
    static addRuNsignals(builder, ruNsignals) {
        builder.addFieldInt64(13, ruNsignals, BigInt('0'));
    }
    static addRuNvcsw(builder, ruNvcsw) {
        builder.addFieldInt64(14, ruNvcsw, BigInt('0'));
    }
    static addRuNivcsw(builder, ruNivcsw) {
        builder.addFieldInt64(15, ruNivcsw, BigInt('0'));
    }
    static endResourceUsageResponse(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createResourceUsageResponse(builder, ruUtime, ruStime, ruMaxrss, ruIxrss, ruIdrss, ruIsrss, ruMinflt, ruMajflt, ruNswap, ruInblock, ruOublock, ruMsgsnd, ruMsgrcv, ruNsignals, ruNvcsw, ruNivcsw) {
        ResourceUsageResponse.startResourceUsageResponse(builder);
        ResourceUsageResponse.addRuUtime(builder, ruUtime);
        ResourceUsageResponse.addRuStime(builder, ruStime);
        ResourceUsageResponse.addRuMaxrss(builder, ruMaxrss);
        ResourceUsageResponse.addRuIxrss(builder, ruIxrss);
        ResourceUsageResponse.addRuIdrss(builder, ruIdrss);
        ResourceUsageResponse.addRuIsrss(builder, ruIsrss);
        ResourceUsageResponse.addRuMinflt(builder, ruMinflt);
        ResourceUsageResponse.addRuMajflt(builder, ruMajflt);
        ResourceUsageResponse.addRuNswap(builder, ruNswap);
        ResourceUsageResponse.addRuInblock(builder, ruInblock);
        ResourceUsageResponse.addRuOublock(builder, ruOublock);
        ResourceUsageResponse.addRuMsgsnd(builder, ruMsgsnd);
        ResourceUsageResponse.addRuMsgrcv(builder, ruMsgrcv);
        ResourceUsageResponse.addRuNsignals(builder, ruNsignals);
        ResourceUsageResponse.addRuNvcsw(builder, ruNvcsw);
        ResourceUsageResponse.addRuNivcsw(builder, ruNivcsw);
        return ResourceUsageResponse.endResourceUsageResponse(builder);
    }
    unpack() {
        return new ResourceUsageResponseT(this.ruUtime(), this.ruStime(), this.ruMaxrss(), this.ruIxrss(), this.ruIdrss(), this.ruIsrss(), this.ruMinflt(), this.ruMajflt(), this.ruNswap(), this.ruInblock(), this.ruOublock(), this.ruMsgsnd(), this.ruMsgrcv(), this.ruNsignals(), this.ruNvcsw(), this.ruNivcsw());
    }
    unpackTo(_o) {
        _o.ruUtime = this.ruUtime();
        _o.ruStime = this.ruStime();
        _o.ruMaxrss = this.ruMaxrss();
        _o.ruIxrss = this.ruIxrss();
        _o.ruIdrss = this.ruIdrss();
        _o.ruIsrss = this.ruIsrss();
        _o.ruMinflt = this.ruMinflt();
        _o.ruMajflt = this.ruMajflt();
        _o.ruNswap = this.ruNswap();
        _o.ruInblock = this.ruInblock();
        _o.ruOublock = this.ruOublock();
        _o.ruMsgsnd = this.ruMsgsnd();
        _o.ruMsgrcv = this.ruMsgrcv();
        _o.ruNsignals = this.ruNsignals();
        _o.ruNvcsw = this.ruNvcsw();
        _o.ruNivcsw = this.ruNivcsw();
    }
}
exports.ResourceUsageResponse = ResourceUsageResponse;
class ResourceUsageResponseT {
    ruUtime;
    ruStime;
    ruMaxrss;
    ruIxrss;
    ruIdrss;
    ruIsrss;
    ruMinflt;
    ruMajflt;
    ruNswap;
    ruInblock;
    ruOublock;
    ruMsgsnd;
    ruMsgrcv;
    ruNsignals;
    ruNvcsw;
    ruNivcsw;
    constructor(ruUtime = BigInt('0'), ruStime = BigInt('0'), ruMaxrss = BigInt('0'), ruIxrss = BigInt('0'), ruIdrss = BigInt('0'), ruIsrss = BigInt('0'), ruMinflt = BigInt('0'), ruMajflt = BigInt('0'), ruNswap = BigInt('0'), ruInblock = BigInt('0'), ruOublock = BigInt('0'), ruMsgsnd = BigInt('0'), ruMsgrcv = BigInt('0'), ruNsignals = BigInt('0'), ruNvcsw = BigInt('0'), ruNivcsw = BigInt('0')) {
        this.ruUtime = ruUtime;
        this.ruStime = ruStime;
        this.ruMaxrss = ruMaxrss;
        this.ruIxrss = ruIxrss;
        this.ruIdrss = ruIdrss;
        this.ruIsrss = ruIsrss;
        this.ruMinflt = ruMinflt;
        this.ruMajflt = ruMajflt;
        this.ruNswap = ruNswap;
        this.ruInblock = ruInblock;
        this.ruOublock = ruOublock;
        this.ruMsgsnd = ruMsgsnd;
        this.ruMsgrcv = ruMsgrcv;
        this.ruNsignals = ruNsignals;
        this.ruNvcsw = ruNvcsw;
        this.ruNivcsw = ruNivcsw;
    }
    pack(builder) {
        return ResourceUsageResponse.createResourceUsageResponse(builder, this.ruUtime, this.ruStime, this.ruMaxrss, this.ruIxrss, this.ruIdrss, this.ruIsrss, this.ruMinflt, this.ruMajflt, this.ruNswap, this.ruInblock, this.ruOublock, this.ruMsgsnd, this.ruMsgrcv, this.ruNsignals, this.ruNvcsw, this.ruNivcsw);
    }
}
exports.ResourceUsageResponseT = ResourceUsageResponseT;
